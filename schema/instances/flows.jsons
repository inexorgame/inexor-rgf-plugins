{"$schema":"http://json-schema.org/draft-07/schema#","title":"FlowInstance","description":"A flow instance is a container for entity instances and relation instances.\n\nA flow instance is strictly associated with a wrapper entity instance. The properties of the wrapper entity instance are the properties of the flow.\n\nAdditionally, flows can be nested -  from the perspective of the outer flow the inner flow acts like an entity instance. The wrapper entity instance of the inner flow is the interface which can be accessed by the outer flow.\n\nEntity instances and relation instances can be shared with multiple flows.\n\nIt's even possible to connect entity instances from different flows with relation instances.","type":"object","allOf":[{"$ref":"#/definitions/NamespacedType"}],"required":["id"],"properties":{"description":{"description":"Textual description of the flow instance.","default":"","type":"string"},"entity_instances":{"description":"The entity instances which are contained in this flow instance.\n\nIt can't have a default because the wrapper entity instance must be present in the list of entities.","default":[],"type":"array","items":{"$ref":"#/definitions/EntityInstance"}},"id":{"description":"The id of the flow corresponds to the id of the wrapper entity instance\n\nThis means the vector of entity instances must contain an instance with the id of the flow.","type":"string","format":"uuid"},"name":{"description":"TODO: Rename: flow_instance_name The name of the flow instance.","default":"","type":"string"},"relation_instances":{"description":"The relation instances which are contained in this flow instance.\n\nBy default, no relation instances are contained in this flow instance.","default":[],"type":"array","items":{"$ref":"#/definitions/RelationInstance"}}},"definitions":{"EntityInstance":{"description":"Entity instances represents an typed object which contains properties.\n\nThe entity type defines the properties (name, data type and socket type).\n\nIn contrast to the entity type the entity instance stores values in it's properties.","type":"object","allOf":[{"$ref":"#/definitions/NamespacedType"}],"required":["id"],"properties":{"description":{"description":"The description of the entity instance.","default":"","type":"string"},"extensions":{"description":"Entity instance specific extensions.","default":[],"type":"array","items":{"$ref":"#/definitions/Extension"}},"id":{"description":"The unique identifier of the entity instance.","type":"string","format":"uuid"},"properties":{"description":"The properties of then entity instance.\n\nEach property is represented by it's name (String) and it's value. The value is a representation of a JSON. Therefore the value can be boolean, number, string, array or an object. For more information about the data types please look at <https://docs.serde.rs/serde_json/value/enum.Value.html>","default":{},"type":"object","additionalProperties":true}}},"Extension":{"description":"Extension on a type. The extension allows to extend information","type":"object","allOf":[{"$ref":"#/definitions/NamespacedType"}],"required":["extension"],"properties":{"description":{"description":"Textual description of the extension.","default":"","type":"string"},"extension":{"description":"The extension as JSON representation."}}},"NamespacedType":{"description":"Defines the namespace and the name of a type.","type":"object","required":["type_name"],"properties":{"namespace":{"description":"The namespace the component belongs to.","default":"","type":"string"},"type_name":{"description":"The name of the type.","type":"string"}}},"RelationInstance":{"description":"Relation instances are edges from an outbound entity instance to an inbound entity instance.\n\nThe relation instance is of a relation type. The relation type defines the entity types of the outbound entity instance and the inbound entity instance. Furthermore the relation type defines which properties (name, data type, socket type) a relation instance have to have.\n\nIn contrast to the relation type, the relation instance stores values/ documents in it's properties.","type":"object","allOf":[{"$ref":"#/definitions/NamespacedType"}],"required":["inbound_id","instance_id","outbound_id"],"properties":{"description":{"description":"Textual description of the relation instance.","default":"","type":"string"},"extensions":{"description":"Relation instance specific extensions.","default":[],"type":"array","items":{"$ref":"#/definitions/Extension"}},"inbound_id":{"description":"The id of the inbound vertex.","type":"string","format":"uuid"},"instance_id":{"description":"The instance id.","type":"string"},"outbound_id":{"description":"The id of the outbound vertex.","type":"string","format":"uuid"},"properties":{"description":"The properties of then relation instance.\n\nEach property is represented by it's name (String) and it's value. The value is a representation of a JSON. Therefore the value can be boolean, number, string, array or an object. For more information about the data types please look at <https://docs.serde.rs/serde_json/value/enum.Value.html>","default":{},"type":"object","additionalProperties":true}}}}}