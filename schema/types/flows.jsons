{"$schema":"http://json-schema.org/draft-07/schema#","title":"FlowType","description":"Flow types defines the type of an flow instance like a template for flow instances.\n\nThey contain entity instances and relation instances. The wrapper entity instance is mandatory and used for input and outputs.","type":"object","allOf":[{"$ref":"#/definitions/NamespacedType"}],"required":["wrapper_entity_instance"],"properties":{"description":{"description":"Textual description of the flow type.","default":"","type":"string"},"entity_instances":{"description":"The entity instances which are contained in this flow.\n\nBy default, no relation instances are contained in this flow type.","default":[],"type":"array","items":{"$ref":"#/definitions/EntityInstance"}},"extensions":{"description":"Flow type specific extensions.","default":[],"type":"array","items":{"$ref":"#/definitions/Extension"}},"relation_instances":{"description":"The relation instances which are contained in this flow.\n\nBy default, no relation instances are contained in this flow type.","default":[],"type":"array","items":{"$ref":"#/definitions/RelationInstance"}},"variables":{"description":"The variables. Variables will be replaced by instantiation of a flow instance.\n\nBy default, the flow type has no variables.","default":[],"type":"array","items":{"$ref":"#/definitions/PropertyType"}},"wrapper_entity_instance":{"description":"The wrapper entity instance.","allOf":[{"$ref":"#/definitions/EntityInstance"}]}},"definitions":{"DataType":{"description":"Derived from serde_json::Value but without value payload.","oneOf":[{"description":"Represents a JSON null value.","type":"string","enum":["null"]},{"description":"Represents a JSON boolean.","type":"string","enum":["bool"]},{"description":"Represents a JSON number, whether integer or floating point.","type":"string","enum":["number"]},{"description":"Represents a JSON string.","type":"string","enum":["string"]},{"description":"Represents a JSON array.","type":"string","enum":["array"]},{"description":"Represents a JSON object.","type":"string","enum":["object"]},{"description":"Represents any type (relations).","type":"string","enum":["any"]}]},"EntityInstance":{"description":"Entity instances represents an typed object which contains properties.\n\nThe entity type defines the properties (name, data type and socket type).\n\nIn contrast to the entity type the entity instance stores values in it's properties.","type":"object","allOf":[{"$ref":"#/definitions/NamespacedType"}],"required":["id"],"properties":{"description":{"description":"The description of the entity instance.","default":"","type":"string"},"extensions":{"description":"Entity instance specific extensions.","default":[],"type":"array","items":{"$ref":"#/definitions/Extension"}},"id":{"description":"The unique identifier of the entity instance.","type":"string","format":"uuid"},"properties":{"description":"The properties of then entity instance.\n\nEach property is represented by it's name (String) and it's value. The value is a representation of a JSON. Therefore the value can be boolean, number, string, array or an object. For more information about the data types please look at <https://docs.serde.rs/serde_json/value/enum.Value.html>","default":{},"type":"object","additionalProperties":true}}},"Extension":{"description":"Extension on a type. The extension allows to extend information","type":"object","allOf":[{"$ref":"#/definitions/NamespacedType"}],"required":["extension"],"properties":{"description":{"description":"Textual description of the extension.","default":"","type":"string"},"extension":{"description":"The extension as JSON representation."}}},"Mutability":{"description":"The mutability of a property.","oneOf":[{"description":"The property is mutable.","type":"string","enum":["mutable"]},{"description":"The property is immutable.","type":"string","enum":["immutable"]}]},"NamespacedType":{"description":"Defines the namespace and the name of a type.","type":"object","required":["type_name"],"properties":{"namespace":{"description":"The namespace the component belongs to.","default":"","type":"string"},"type_name":{"description":"The name of the type.","type":"string"}}},"PropertyType":{"description":"Definition of a property. The definition contains the name of the property, the data type and the socket type.","type":"object","required":["data_type","name"],"properties":{"data_type":{"description":"The data type of the property","allOf":[{"$ref":"#/definitions/DataType"}]},"description":{"description":"The description of the property.","default":"","type":"string"},"extensions":{"description":"Property specific extensions","default":[],"type":"array","items":{"$ref":"#/definitions/Extension"}},"mutability":{"description":"Specifies if the property is mutable.","default":"mutable","allOf":[{"$ref":"#/definitions/Mutability"}]},"name":{"description":"The name of the property","type":"string"},"socket_type":{"description":"Specifies the type of socket - either input socket or output socket or none","default":"none","allOf":[{"$ref":"#/definitions/SocketType"}]}}},"RelationInstance":{"description":"Relation instances are edges from an outbound entity instance to an inbound entity instance.\n\nThe relation instance is of a relation type. The relation type defines the entity types of the outbound entity instance and the inbound entity instance. Furthermore the relation type defines which properties (name, data type, socket type) a relation instance have to have.\n\nIn contrast to the relation type, the relation instance stores values/ documents in it's properties.","type":"object","allOf":[{"$ref":"#/definitions/NamespacedType"}],"required":["inbound_id","instance_id","outbound_id"],"properties":{"description":{"description":"Textual description of the relation instance.","default":"","type":"string"},"extensions":{"description":"Relation instance specific extensions.","default":[],"type":"array","items":{"$ref":"#/definitions/Extension"}},"inbound_id":{"description":"The id of the inbound vertex.","type":"string","format":"uuid"},"instance_id":{"description":"The instance id.","type":"string"},"outbound_id":{"description":"The id of the outbound vertex.","type":"string","format":"uuid"},"properties":{"description":"The properties of then relation instance.\n\nEach property is represented by it's name (String) and it's value. The value is a representation of a JSON. Therefore the value can be boolean, number, string, array or an object. For more information about the data types please look at <https://docs.serde.rs/serde_json/value/enum.Value.html>","default":{},"type":"object","additionalProperties":true}}},"SocketType":{"description":"The socket type defines if the property acts as an input or output socket or is an hidden property","oneOf":[{"description":"The property doesn't act as input or output socket.","type":"string","enum":["none"]},{"description":"The property acts as input socket and accepts incoming connections.","type":"string","enum":["input"]},{"description":"The property acts as output socket and accepts outgoing connections.","type":"string","enum":["output"]}]}}}