name: Release

permissions:
  contents: write

on:
  push:
    tags:
      - v[0-9]+.*

env:
  CARGO_TERM_COLOR: always
  WORKSPACE_ROOT_MANIFEST_DIR: "/home/runner/work/inexor-rgf-plugins/inexor-rgf-plugins"

jobs:
  create-release:
    runs-on: ubuntu-latest
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v3
      - name: Create GitHub Release
        uses: taiki-e/create-gh-release-action@v1
        with:
          changelog: CHANGELOG.md
          token: ${{ secrets.GITHUB_TOKEN }}
  crates-io:
    name: Publish on crates.io
    runs-on: ubuntu-latest
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v3
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Yarn
        uses: borales/actions-yarn@v4
        with:
          cmd: --cwd plugins/graphql-client/web install
      - name: Install Yarn
        uses: borales/actions-yarn@v4
        with:
          cmd: --cwd plugins/graphql-schema-visualization/web install
      - name: Install Cargo Workspaces
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-workspaces
          version: latest
          use-tool-cache: true
      - name: Print environment variables
        run: |
          echo "WORKSPACE_ROOT_MANIFEST_DIR: $WORKSPACE_ROOT_MANIFEST_DIR"
      - name: Publish on crates.io
        uses: actions-rs/cargo@v1
        with:
          command: workspaces
          args: publish --from-git --allow-dirty --no-verify
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
          VERGEN_IDEMPOTENT: true
  debian-package:
    name: Publish debian package
    strategy:
      matrix:
        include:
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-latest
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-20.04
          - target: armv7-unknown-linux-gnueabihf
            os: ubuntu-20.04
    runs-on: ${{ matrix.os }}
    steps:
      - name: VCS Checkout
        uses: actions/checkout@v3
      - name: Install aarch64 packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: binutils-aarch64-linux-gnu gcc-aarch64-linux-gnu
          version: 1.0
        if: matrix.target == 'aarch64-unknown-linux-gnu'
      - name: Install armv7 packages
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: binutils-arm-none-eabi gcc-arm-linux-gnueabihf
          version: 1.0
        if: matrix.target == 'armv7-unknown-linux-gnueabihf'
      - name: Install latest nightly
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: nightly
          override: true
      - name: Install Cargo Deb
        uses: actions-rs/install@v0.1
        with:
          crate: cargo-deb
          version: latest
          use-tool-cache: true
      - name: Install cross-compilation tools
        uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
      - name: Setup Node.js 18
        uses: actions/setup-node@v3
        with:
          node-version: 18
      - name: Install Yarn
        uses: borales/actions-yarn@v4
        with:
          cmd: --cwd plugins/graphql-client/web install
      - name: Install Yarn
        uses: borales/actions-yarn@v4
        with:
          cmd: --cwd plugins/graphql-schema-visualization/web install
      - name: Create Debian Package
        run: |
          # It's important to change into the plugin directory and building each package
          cd ./plugins/arithmetic/crates/plugin
          cargo deb -p inexor-rgf-plugin-arithmetic --target=${{ matrix.target }}
          cd ../../../base/crates/plugin
          cargo deb -p inexor-rgf-plugin-base --target=${{ matrix.target }}
          cd ../../../binary/crates/plugin
          cargo deb -p inexor-rgf-plugin-binary --target=${{ matrix.target }}
          cd ../../../color/crates/plugin
          cargo deb -p inexor-rgf-plugin-color --target=${{ matrix.target }}
          cd ../../../comparison/crates/plugin
          cargo deb -p inexor-rgf-plugin-comparison --target=${{ matrix.target }}
          cd ../../../config/crates/plugin
          cargo deb -p inexor-rgf-plugin-config --target=${{ matrix.target }}
          cd ../../../connector/crates/plugin
          cargo deb -p inexor-rgf-plugin-connector --target=${{ matrix.target }}
          cd ../../../date-time/crates/plugin
          cargo deb -p inexor-rgf-plugin-date-time --target=${{ matrix.target }}
          cd ../../../file/crates/plugin
          cargo deb -p inexor-rgf-plugin-file --target=${{ matrix.target }}
          cd ../../../flow/crates/plugin
          cargo deb -p inexor-rgf-plugin-flow --target=${{ matrix.target }}
          cd ../../../git/crates/plugin
          cargo deb -p inexor-rgf-plugin-git --target=${{ matrix.target }}
          cd ../../../http/crates/plugin
          cargo deb -p inexor-rgf-plugin-http --target=${{ matrix.target }}
          cd ../../../json/crates/plugin
          cargo deb -p inexor-rgf-plugin-json --target=${{ matrix.target }}
          cd ../../../logical/crates/plugin
          cargo deb -p inexor-rgf-plugin-logical --target=${{ matrix.target }}
          cd ../../../metadata/crates/plugin
          cargo deb -p inexor-rgf-plugin-metadata --target=${{ matrix.target }}
          cd ../../../numeric/crates/plugin
          cargo deb -p inexor-rgf-plugin-numeric --target=${{ matrix.target }}
          cd ../../../random/crates/plugin
          cargo deb -p inexor-rgf-plugin-random --target=${{ matrix.target }}
          cd ../../../result/crates/plugin
          cargo deb -p inexor-rgf-plugin-result --target=${{ matrix.target }}
          cd ../../../state/crates/plugin
          cargo deb -p inexor-rgf-plugin-state --target=${{ matrix.target }}
          cd ../../../string/crates/plugin
          cargo deb -p inexor-rgf-plugin-string --target=${{ matrix.target }}
          cd ../../../system-environment/crates/plugin
          cargo deb -p inexor-rgf-plugin-system-environment --target=${{ matrix.target }}
          cd ../../../taxonomy/crates/plugin
          cargo deb -p inexor-rgf-plugin-taxonomy --target=${{ matrix.target }}
          cd ../../../trigger/crates/plugin
          cargo deb -p inexor-rgf-plugin-trigger --target=${{ matrix.target }}
          cd ../../../value/crates/plugin
          cargo deb -p inexor-rgf-plugin-value --target=${{ matrix.target }}
          cd ../../../graphql-client
          cargo deb -p inexor-rgf-plugin-graphql-client --target=${{ matrix.target }}
          cd ../graphql-schema-visualization
          cargo deb -p inexor-rgf-plugin-graphql-schema-visualization --target=${{ matrix.target }}
        env:
          VERGEN_IDEMPOTENT: true
      - name: Upload debian package to release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/debian/libinexor-rgf-plugin-*_*_*.deb
          file_glob: true
          tag: ${{ github.ref }}
