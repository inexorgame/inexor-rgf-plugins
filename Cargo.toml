cargo-features = ["workspace-inheritance"]

[workspace]

members = [
    "plugins/arithmetic/crates/model",
    "plugins/arithmetic/crates/plugin",
    "plugins/base/crates/model",
    "plugins/base/crates/plugin",
    "plugins/binary/crates/model",
    "plugins/binary/crates/plugin",
    "plugins/color/crates/model",
    "plugins/color/crates/plugin",
    "plugins/comparison/crates/model",
    "plugins/comparison/crates/plugin",
    "plugins/config/crates/model",
    "plugins/config/crates/plugin",
    "plugins/connector/crates/model",
    "plugins/connector/crates/plugin",
    "plugins/date-time/crates/model",
    "plugins/date-time/crates/plugin",
    "plugins/file/crates/model",
    "plugins/file/crates/plugin",
    "plugins/flow/crates/model",
    "plugins/flow/crates/plugin",
    "plugins/git/crates/model",
    "plugins/git/crates/plugin",
    "plugins/graphql-client",
    "plugins/graphql-schema-visualization",
    "plugins/http/crates/model",
    "plugins/http/crates/plugin",
#    "plugins/i18n/crates/model",
#    "plugins/i18n/crates/plugin",
    "plugins/json/crates/model",
    "plugins/json/crates/plugin",
    "plugins/logical/crates/model",
    "plugins/logical/crates/plugin",
    "plugins/metadata/crates/model",
    "plugins/metadata/crates/plugin",
    "plugins/numeric/crates/model",
    "plugins/numeric/crates/plugin",
    "plugins/random/crates/model",
    "plugins/random/crates/plugin",
    "plugins/result/crates/model",
    "plugins/result/crates/plugin",
    "plugins/state/crates/model",
    "plugins/state/crates/plugin",
    "plugins/string/crates/model",
    "plugins/string/crates/plugin",
    "plugins/system-environment/crates/model",
    "plugins/system-environment/crates/plugin",
    "plugins/taxonomy/crates/model",
    "plugins/taxonomy/crates/plugin",
    "plugins/trigger/crates/model",
    "plugins/trigger/crates/plugin",
    "plugins/value/crates/model",
    "plugins/value/crates/plugin",
    "deployment"
]
resolver = "2"

[workspace.package]
version = "0.10.0"
authors = ["Andreas Schaeffer <hanack@nooblounge.net>"]
edition = "2021"
license = "MIT"
repository = "https://github.com/inexorgame/inexor-rgf-plugins"
homepage = "https://inexorgame.github.io/inexor-rgf-application/book/"
keywords = ["graph", "reactive", "control-flow", "inexor"]

[workspace.dependencies]
angle = "0.5"
angular-units = "0.2.4"
async-std = "1.12"
async-trait = "0.1"
base64 = "0.21"
chrono = "0.4"
crossbeam = "0.8"
dashmap = "5.4"
data-url = "0.3"
default-test = "0.1"
fluent-bundle = "0.15"
fluent-templates = "0.8"
git2 = "0.18"
http = "0.2"
humantime = "2.1"
infer = "0.15"
json5 = "0.4"
lazy_static = "1.4"
license = "3.0"
log = { version = "0.4", features = ["std", "serde"] }
log4rs = { version = "1.2", features = ["console_appender", "file_appender", "toml_format"] }
matchit = "0.7"
mime_guess = "2.0"
notify = { version = "6.1", features = ["serde", "crossbeam-channel"] }
num-traits = "0.2"
paste = "1.0"
prisma = "0.1.1"
quote = "1.0"
query_interface = "0.3"
rand = "0.8"
rand_chacha = "0.3"
random-string = "1.0"
rust-embed = { version = "8.0", features = ["debug-embed", "compression"] }
semver = "1.0"
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
springtime = "1.0"
springtime-di = { version = "1.0", default-features = false, features = ["threadsafe", "derive"] }
springtime-di-derive = "0.3"
shellexpand = "3.0"
strum = { version = "0.25", features = ["derive"] }
strum_macros = "0.25"
tera = "1"
thiserror = "1.0"
tokio = { version = "1", features = ["macros", "time", "rt", "rt-multi-thread"] }
toml = "0.8"
unic-langid = "0.9"
ureq = { version = "2.4", features = ["json"] }
url = "2.3"
uuid = { version = "1.2", features = ["serde", "v4", "v5"] }
voca_rs = "1"

### Prefer git over crates.io for development

inexor-rgf-behaviour-model-api = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-behaviour-model-impl = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-behaviour-service-api = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-config-model = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-graph = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-runtime-model = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-plugin-api = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-plugin-derive = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-reactive-model-api = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-reactive-model-impl = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-reactive-service-api = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git", features = ["derive"] }
inexor-rgf-reactive-service-impl = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-type-system-api = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git", features = ["json5", "toml"] }
inexor-rgf-lifecycle = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }
inexor-rgf-test-utils = { version = "0.10.0", git = "https://github.com/inexorgame/inexor-rgf-application.git" }

### Prefer local over git for local development

#inexor-rgf-behaviour-model-api = { version = "0.10.0", path = "../inexor-rgf/crates/behaviour/model/api" }
#inexor-rgf-behaviour-model-impl = { version = "0.10.0", path = "../inexor-rgf/crates/behaviour/model/impl" }
#inexor-rgf-behaviour-service-api = { version = "0.10.0", path = "../inexor-rgf/crates/behaviour/service/api" }
#inexor-rgf-config-model = { version = "0.10.0", path = "../inexor-rgf/crates/config/model" }
#inexor-rgf-graph = { version = "0.10.0", path = "../inexor-rgf/crates/graph" }
#inexor-rgf-plugin-api = { version = "0.10.0", path = "../inexor-rgf/crates/plugin/api" }
#inexor-rgf-plugin-derive = { version = "0.10.0", path = "../inexor-rgf/crates/plugin/derive" }
#inexor-rgf-reactive-model-api = { version = "0.10.0", path = "../inexor-rgf/crates/reactive/model/api" }
#inexor-rgf-reactive-model-impl = { version = "0.10.0", path = "../inexor-rgf/crates/reactive/model/impl" }
#inexor-rgf-reactive-service-api = { version = "0.10.0", path = "../inexor-rgf/crates/reactive/service/api", features = ["derive"] }
#inexor-rgf-reactive-service-impl = { version = "0.10.0", path = "../inexor-rgf/crates/reactive/service/impl" }
#inexor-rgf-runtime-api = { version = "0.10.0", path = "../inexor-rgf/crates/runtime/api" }
#inexor-rgf-runtime-model = { version = "0.10.0", path = "../inexor-rgf/crates/runtime/model" }
#inexor-rgf-type-system-api = { version = "0.10.0", path = "../inexor-rgf/crates/type-system/api", features = ["json5", "toml"] }
#inexor-rgf-lifecycle = { version = "0.10.0", path = "../inexor-rgf/crates/lifecycle" }
#inexor-rgf-test-utils = { version = "0.10.0", path = "../inexor-rgf/crates/test-utils" }

[profile.dev]
opt-level = 0

[profile.release]
opt-level = 3
lto = true
strip = "symbols"
